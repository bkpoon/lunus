==> avgim.c <==
/* AVGIM.C - Calculate the average intensity for an input image.
   
   Author: Mike Wall   
   Date: 1/11/95
   Version: 1.
   
   "avgim <input image>"

   Input is TIFF TV6 image.  Output is a number which is the average
   pixel value in the image.

==> avgr.c <==
/* AVGR.C - Generate a table of average voxel values as a function of radius
		for an input 3D lattice.
   
   Author: Mike Wall
   Date: 3/28/93
   Version: 1.
   
   Usage:
   		"avgr <input file> <output file>"


==> avgrf.c <==
/* AVGRF.C - Average the values of an rfile.
   
   Author: Mike Wall
   Date: 1/12/95
   Version: 1.
   
   "avgrf <input rfile> <output file>"
   
   Input is one rfile.  Output is average value to output file.
   

==> avgrim.c <==
/* AVGRIM.C - Calculate the average intensity as a function of radius for an
		input image.
   
   Author: Mike Wall   
   Date: 4/3/93
   Version: 1.
   
   "avgrim <input image> <output rfile> <x origin> <y origin>"

   Input is TIFF TV6 image.  Output is a list of values of I(r).

==> avgrlt.c <==
/* AVGRLT.C - Calculate the average voxel value vs. radius for an 
              input lattice
   
   Author: Mike Wall
   Date: 3/1/95
   Version: 1.
   
   Usage:
   		"avgrlt <input lattice> <output rfile>"


==> avgsqim.c <==
/* AVGSQIM.C - Calculate the average square intensity for an input image.
   
   Author: Mike Wall   
   Date: 1/23/95
   Version: 1.
   
   "avgsqim <input image>"

   Input is TIFF TV6 image.  Output is a number which is the average
   square pixel value in the image.

==> avsqrim.c <==
/* AVSQRIM.C - Calculate the average intensity squared as a function of radius 
		for an input image.
   
   Author: Mike Wall   
   Date: 4/18/93
   Version: 1.
   
   "avsqrim <input image> <output rfile> <x origin> <y origin>"

   Input is TIFF TV6 image.  Output is a list of values of I(r).

==> avsqrlt.c <==
/* AVSQRLT.C - Calculate the average square voxel value vs. radius for an 
              input lattice
   
   Author: Mike Wall
   Date: 3/15/95
   Version: 1.
   
   Usage:
   		"avsqrlt <input lattice> <output rfile>"


==> binasc.c <==
/* BINASC.C - Convert a list of floating points binary inputs to ascii and
		reverse.
   Author: Mike Wall
   Date: 3/29/94
   Version: 1.0
   Description:

		"binasc [options] < input > output"

		Input is a binary/ascii stream.  

==> buttim.c <==
/* BUTTIM.C - Mask a diffraction image using a butterfly shape.
   
   Author: Mike Wall
   Date: 6/22/94
   Version: 1.
   
   "buttim <image in> <image out> <x origin> <y origin>
      <offset angle> <opening angle>" 

   Input is diffraction image.  Output is masked image.

==> constim.c <==
/* CONSTIM - Create an image with constant pixel value based on an input
		image format.
   
   Author: Mike Wall
   Date: 4/18/94
   Version: 1.
   
   "constim <image in> <constant> <image out>" 

   Input is image and constant.  Output is constant image of type input image.

==> constlt.c <==
/* CONSTLT.C - Create a constant lattice, using an input lattice as a */
/* template. 
   
   Author: Mike Wall
   Date: 8/5/95
   Version: 1.
   
   Usage:
   		"constlt <input lattice> <output lattice> <constant>"


==> constrf.c <==
/* CONSTRF.C - Create an rfile with the value of a constant give at the
		input line.
   
   Author: Mike Wall
   Date: 4/19/94
   Version: 1.
   
   "constrf <input rfile> <constant> <output rfile>"

   Input is an rfile and a constant.  Output is an rfile with all values 

==> culllt.c <==
/* CULLLT.C - Multiply each voxel in a lattice by a scalar.
   
   Author: Mike Wall
   Date: 4/26/95
   Version: 1.
   
   Usage:
   		"culllt <input lattice> <output lattice> <inner
		radius> <outer radius>"


==> cutim.c <==
/* CUTIM.C - "Cut" a rectangle out of an image by marking pixels 
     with ignore tags.
   
   Author: Mike Wall  
   Date: 1/13/95
   Version: 1.
   
   "cutim <image in> <x_lower_bound> <x_upper_bound> <y_lower_bound> 
		<y_upper_bound> <image out>


==> df2im.c <==
/* DF2IM.C - Generate an image based upon a diffuse features file.
                
   Author: Mike Wall  
   Date: 5/30/94
   Version: 1.0
   
   "df2im <diffuse features in> <template image in> <image out>"

   Input is ascii diffuse features file and input template image.  Output is
   diffuse features file.

==> dfrflt.c <==
/* DFRFLT.C - Calculate an R-factor rfile for two input lattices.
   
   Author: Mike Wall
   Date: 7/9/95
   Version: 1.
   
   Usage:
   		"dfrflt <input lattice 1> <input lattice 2> <output
		rfile>"


==> dfsqrlt.c <==
/* DFSQRLT.C - Calculate the normalized difference squared voxel value */
/* vs.  radius between two input lattices in radial shells
   
   Author: Mike Wall
   Date: 3/15/95
   Version: 1.
   
   Usage:
   		"dfsqrlt <input lattice 1> <input lattice 2> <output
		rfile>"

==> divlt.c <==
/* DIVLT.C - Calculate the voxel-by-voxel quotient of two lattices.
   
   Author: Mike Wall
   Date: 4/11/95
   Version: 1.
   
   Usage:
   		"divlt <input lattice 1> <input lattice 2> <output
		lattice>"


==> divrf.c <==
/* DIVRF.C - Divide two one rfile by another.
   
   Author: Mike Wall
   Date: 4/19/94
   Version: 1.
   
   "divrf <input rfile 1> <input rfile 2> <output rfile>"

   Input is two rfiles.  Output is first rfile divided point-by-point by the
   second.

==> dos2unix.c <==
#include<stdio.h>
#include<stdlib.h>

#define CR 13
#define END_OF_STREAM 255

void main(void)
{
	char 
		ch;

==> explt.c <==
/* EXPLT.C - Multiply each voxel in a lattice by an exponential.
   
   Author: Mike Wall
   Date: 3/21/95
   Version: 1.
   
   Usage:
   		"explt <input lattice> <width> <output lattice>"

		Input is a scalar and an input 

==> fftim.c <==
/* FFTIM.C - Calculate the fft of an image.
   
   Author: Mike Wall
   Date: 3/15/95
   Version: 1.
   
   Usage:
   		"fftim <real input image> <imaginary input image>
		<real FFT image> <imaginary FFT image> <isign>"


==> fftlt.61.c <==
/* FFTLT.C - Calculate the fft of a lattice.
   
   Author: Mike Wall
   Date: 2/28/95
   Version: 1.
   
   Usage:
   		"fftlt <real input lattice> <imaginary input lattice>
		<real FFT lattice> <imaginary FFT lattice>"


==> fftlt.c <==
/* FFTLT.C - Calculate the fft of a lattice.
   
   Author: Mike Wall
   Date: 2/28/95
   Version: 1.
   
   Usage:
   		"fftlt <real input lattice> <imaginary input lattice>
		<real FFT lattice> <imaginary FFT lattice> <isign>"


==> filter.c <==
/* FILTER.C - Select data points from a list which match another in 
   the x-coordinate.
   
   Author: Mike Wall
   Date: 12/31/94
   Version: 1.0
   
   "filter <input list 1> <input list 2> <output list>"
   
   Input is two (x,y) lists.  Output is (x,y) of the second which have x2=x1.

==> ftfltim.c <==
/* FTFLTIM.C - Fourier-transform filter an image.
   
   Author: Mike Wall
   Date: 4/7/95
   Version: 1.
   
   Usage:
   		"ftfltim <input image> <output image> <length scale>"

		Input is image.  Output is FT filtered image.

==> gausslt.c <==
/* GAUSSLT.C - Generate a gaussian lattice.
   
   Author: Mike Wall
   Date: 2/28/95
   Version: 1.
   
   Usage:
   		"gausslt <input lattice> <output lattice> <peak> <width>"

		Input is lattice.  Output is FFT of lattice.

==> gencmd.c <==
#include<stdio.h>

void main(void)
{
	short i;

	for (i=0;i<=196;i++) {
		printf("dd if=/dev/nrtapensv of=lysh%d.tif bs=2101248\n",i);
	}
} 

==> genlat.c <==
/* GENLAT.C - Create a 3D lattice based upon an input list of
              diffraction images and index files.
   
   Author: Mike Wall
   Date: 2/22/95
   Version: 1.

   Usage:

   "genlat <output file > <inner radius cutoff> <outer radius cutoff>

==> genlat.new.c <==
/* GENLAT.C - Create a 3D lattice based upon an input list of
              diffraction images and index files.
   
   Author: Mike Wall
   Date: 2/22/95
   Version: 1.

   Usage:

   "genlat <output file > <inner radius cutoff> <outer radius cutoff>"

==> genlat.tmp.c <==
/* GENLAT.C - Create a 3D lattice based upon an input list of
              diffraction images and index files.
   
   Author: Mike Wall
   Date: 2/22/95
   Version: 1.

   Usage:

   "genlat <output file > <inner radius cutoff> <outer radius cutoff> <minrange>"

==> genlat.works.c <==
/* GENLAT.C - Create a 3D lattice based upon an input list of
              diffraction images and index files.
   
   Author: Mike Wall
   Date: 2/22/95
   Version: 1.

   Usage:

   "genlat <output file > <inner radius cutoff> <outer radius cutoff> <minrange>"

==> genmap.c <==
/* GENMAP.C - Create a 3D map of the scattering intensity of a single 
		diffraction image.
   
   Author: Mike Wall
   Date: 3/20/93
   Version: 1.
   Date: 2/6/95
   Version: 2.
      Use orientation matrix to calculate absolute reciprocal lattice vector.
   

==> gmparse.c <==
#include<stdio.h>
#include<stdlib.h>
#include<string.h>

#define SPACE 32

void main(void)
{
	char 
		inline[255],

==> hdrlt.c <==
/* HDRLT.C - Generate a gaussian lattice.
   
   Author: Mike Wall
   Date: 3/2/95
   Version: 1.
   
   Usage:
   		"hdrlt <input lattice> <output lattice>"

		Input is lattice.  Output is header of lattice to stdout.

==> headc.c <==
/*
 * HEADC.C	- Output the header of a specified file.  Use number of
		characters given on input line.

   Version: 1.0
   Date: 3/17/94

	Input line is:
			"headc -<number of characters> <input file>"


==> histim.c <==
/* HISTIM.C - Histogram a specified patch in an image.
   
   Author: Mike Wall  
   Date: 3/12/95
   Version: 1.
   
   "histim <image in> <x_lower_bound> <x_upper_bound> <y_lower_bound> 
		<y_upper_bound> <histogram output file>"

   Input is diffraction image and boundaries of patch.  Output is

==> histlt.c <==
/* HISTLT.C - Histogram voxel values in a lattice in a specified */
/* spherical shell
   
   Author: Mike Wall
   Date: 3/22/95
   Version: 1.
   
   Usage:
   		"histlt <input lattice> <output histogram> <inner
		radius> <outer radius> <binsize>"

==> intdfim.c <==
/* INTDFIM.C - Integrate diffuse features in a diffraction image and output to
               a file.
   
   Author: Mike Wall  
   Date: 5/28/94
   Version: 1.0
   
   "intdfim <diffuse features in> <image in> <diffuse features out>"

   Input is ascii diffuse features file and input image.  Output is

==> intimdf.c <==
/* INTDFIM.C - Integrate diffuse features in a diffraction image and output to
               a file.
   
   Author: Mike Wall  
   Date: 5/28/94
   Version: 1.0
   
   "intdfim <diffuse features in> <image in> <diffuse features out>"

   Input is ascii diffuse features file and input image.  Output is

==> map2lat.c <==
/* MAP2LAT.C - Generate a 3D lattice from an input voxel map.
   
   Author: Mike Wall
   Date: 3/28/93
   Version: 1.
   
   Usage:
   "map2lat <input file> <output file> <inner radius> 
   <outer radius> <x-origin> <y-origin> <z-origin> <minrange>"
   

==> mapbound.c <==
/* MAPBOUND.C - Output the bounds in x,y,z,I for a list of input voxels (map).
   
   Author: Mike Wall
   Date: 3/20/93
   Version: 1.
   
   Usage:
   		"mapbound <input file>"

   Input is a list of voxels (float x, float y, float z, float value).  Output

==> maskimg.c <==
/* MASKIMG.C - Create a pixel mask based on input file coordinates.
   
   Author: Mike Wall   Modified by:Fredrik Osterberg
   Date: 1/11/93
   Version: 1.
   
   "maskimg <input file> <image in> <image out> <hsize> <vsize>"

   Input is ascii coordinates file.  Output is 16-bit 
   image of specified size (1024 x 1024 default).

==> medim.c <==
/* MEDIM.C - Calculate the median of an image in a specified size box.
   
   Author: Mike Wall 
   Date: 4/8/95
   Version: 1.
   
   "medim <image in> <image out> <mask size>"

   Input is ascii coordinates file.  Output is 16-bit 
   image of specified size (1024 x 1024 default).

==> minr.c <==
/* MINR.C - Generate a table of minimum voxel values as a function of radius
		for an input 3D lattice.
   
   Author: Mike Wall
   Date: 3/28/93
   Version: 1.
   
   Usage:
   		"minr <input file> <output file>"


==> minrim.c <==
/* MINRIM.C - Calculate the minimum intensity as a function of radius for an
		input image.
   
   Author: Mike Wall   
   Date: 4/4/93
   Version: 1.
   
   "minrim <input image> <output rfile> <x origin> <y origin>"

   Input is TIFF TV6 image.  Output is a list of values of I(r).

==> modeim.c <==
/* MODEIM.C - Calculate the mode of an image in a specified size box.
   
   Author: Mike Wall 
   Date: 2/2/95
   Version: 1.
   
   "modeim <image in> <image out> <mask size> <bin size>"

   Input is ascii coordinates file.  Output is 16-bit 
   image of specified size (1024 x 1024 default).

==> mulim.c <==
/* MULIM.C - Multiply two images pixel-by-pixel.
   
   Author: Mike Wall
   Date: 4/27/94
   Version: 1.
   
   "mulim <input image 1> <x origin 1> <y origin 1> <input image 2> <x origin 2> <y origin 2> <output image>" 

   Input two diffraction images in TIFF TV6 format.  Output is the second 
   subtracted from the first, taking origin translation into account.

==> mullt.c <==
/* MULLT.C - Calculate the voxel-by-voxel product of two lattices.
   
   Author: Mike Wall
   Date: 4/11/95
   Version: 1.
   
   Usage:
   		"mullt <input lattice 1> <input lattice 2> <output
		lattice>"


==> mulrf.c <==
/* MULRF.C - Multiply two rfiles.
   
   Author: Mike Wall
   Date: 1/12/95
   Version: 1.
   
   "mulrf <input rfile 1> <input rfile 2> <output rfile>"

   Input is two rfiles.  Output is product of rfiles, point-by-point.
   second.

==> mulrfim.c <==
/* LMULRFIM - Subtract I(r) from a diffraction image.
   
   Author: Mike Wall
   Date: 4/4/94
   Version: 1.
   
   "mulrfim <input rfile> <image in> <image out> <x origin> <y origin>"

   Input is rfile and image.  Output is 16-bit 
   image multiplied by rfile.

==> mulsclt.c <==
/* MULSCLT.C - Multiply each voxel in a lattice by a scalar.
   
   Author: Mike Wall
   Date: 3/21/95
   Version: 1.
   
   Usage:
   		"mulsclt <input lattice> <scalar> <output lattice>"

		Input is a scalar and an input 

==> nign.c <==
/* NIGN.C - Calculate the number of ignored pixels vs radius for an
		input image.
   
   Author: Mike Wall   
   Date: 5/5/93
   Version: 1.
   
   "nign <input image> <output rfile> <x origin> <y origin>"

   Input is TIFF TV6 image.  Output is a list of values of N(r).

==> noiseim.c <==
/* NOISEIM - Create a noisy image.
   
   Author: Mike Wall
   Date: 4/10/95
   Version: 1.
   
   "noiseim <image in> <image out> <amplitude>" 

   Input is image and amplitude.  
   Output is noisy image of type input image.

==> normim.c <==
/* NORMIM.C - Normalize the intensity in an image st pixels are */
/* proportional to I(q).  Includes a correction for detector face rotation.
   
   Author: Mike Wall
   Date: 2/24/95
   Version: 1.
   
   "normim <image in> <image out> <x origin> <y origin>
      <distance[mm]> <cassette rotx> <cassette roty>" 


==> ovldim.c <==
/* OVLDIM.C - Punch out overloads in an image.
   
   Author: Mike Wall   Modified by:Fredrik Osterberg
   Date: 3/14/95
   Version: 1.
   
   "ovldim <image in> <image out>"
   
   Input is image with overloads.  Output is image with overloads
   expanded.

==> peakim.c <==
/* PEAKIM - Create an image with various size and strength peaks.
   
   Author: Mike Wall
   Date: 4/6/95
   Version: 1.
   
   "waveim <image in> <image out> <max_amplitude> <pitch>" 

   Input is image, amplitude and pitch.  
   Output is image with peaks of varying amplitude and width

==> polarim.c <==
/* POLARIM.C - Perform polarization correction on a diffraction image.
   
   Author: Mike Wall
   Date: 4/26/94
   Version: 1.
   
   "polarim <image in> <image out> <x origin> <y origin>
      <distance[mm]> <polarization> <offset angle>" 

   Input is diffraction image.  Output is polarization corrected image.

==> prtchr.c <==
#include<stdio.h>
#include<stdlib.h>

main()
{
	char 
		ch=0;
	do {
		putchar(ch);
		ch = getchar();

==> punchim.c <==
/* PUNCH.C - Mark all pixels inside a window in an image with an ignore tag.
   
   Author: Mike Wall  
   Date: 5/12/94
   Version: 1.
   
   "punchim <image in> <x_lower_bound> <x_upper_bound> <y_lower_bound> 
		<y_upper_bound> <image out>

   Input is diffraction image.  Output is 16-bit 

==> rad2s.c <==
#include<stdlib.h>
#include<math.h>
#include<stdio.h>

void main()
{
	char input_string[121];
	float x,y;
	float res;


==> ratioim.c <==
/* RATIOIM.C - Scale one image to another in radial shells.
   
   Author: Mike Wall
   Date: 4/14/94
   Version: 1.
   
   "ratioim <input image 1> <x origin 1> <y origin 1> <input image 2> <x origin 2> <y origin 2> <output 1>" 

   Input two diffraction images in TIFF TV6 format.  Output is rfile
   with ratio as function of radius.

==> rf2char.c <==
/* RF2CHAR.C - Convert an ascii rfile from tv6 to a list of 8-bit integers, 
		stripping the x-axis.
   Author: Mike Wall
   Date: 3/25/94
   Version: 1.0
   Description:

		"rf2char <lower threshold> <upper threshold>"

		Input is an ascii rfile.  

==> rf2lt.c <==
/* SUBRFLT.C - Generate a lattice from an rfile.
   
   Author: Mike Wall
   Date: 3/3/95
   Version: 1.
   
   Usage:
   		"rf2lt <input rfile> <input lattice> <output lattice>"

		Input is a radial intensity distribution and an input 

==> rmpkim.c <==
/* RMPKIM.C - Remove peaks by replacing them with background pixel values..
   
   Author: Mike Wall   Modified by:Fredrik Osterberg
   Date: 5/13/93
   Version: 1.
   
   "rmpkim <input file> <image in> <image out> <hsize> <vsize>"

   Input is ascii coordinates file.  Output is 16-bit 
   image of specified size (1024 x 1024 default).

==> scaleim.c <==
/* SCALEIM.C - Scale one image to another in radial shells.
   
   Author: Mike Wall
   Date: 4/7/94
   Version: 1.
   
   "scaleim <input image 1> <x origin 1> <y origin 1> <input image 2> <x origin 2> <y origin 2> <output 1> <output 2>"

   Input two diffraction images in TIFF TV6 format.  Output is two rfiles
   with scale and offset as function of radius.

==> scalelt.c <==
/* SCALELT.C - Find the best scale factor relating two input lattices.
   
   Author: Mike Wall
   Date: 3/21/95
   Version: 1.
   
   Usage:
   		"scalelt <input lattice 1> <input lattice 2>"

		Input is two 3D lattices.  Output is a scale factor.  

==> scalerf.c <==
/* SCALEIM.C - Scale one image to another in radial shells.
   
   Author: Mike Wall
   Date: 4/7/94
   Version: 1.
   
   "scaleim <input image 1> <x origin 1> <y origin 1> <input image 2> <x origin 2> <y origin 2> <output 1> <output 2>"

   Input two diffraction images in TIFF TV6 format.  Output is two rfiles
   with scale and offset as function of radius.

==> see.c <==
/* SEE.C - Convert a 16-bit 1024x1024 TV6 tiff image to an 8-bit tiff image.
		Scale to window given at input command line.
   Author: Mike Wall
   Date: 2/25/94
   Version: 1.0
   Description:

		"see <input file> <output file> <lower threshold> 
			<upper threshold>"


==> seecat.c <==
/* SEE.C - Convert a 16-bit 1024x1024 TV6 tiff image to an 8-bit tiff image.
		Scale to window given at input command line.
   Author: Mike Wall
   Date: 2/25/94
   Version: 1.0
   Description:

		"see <input file> <output file> <lower threshold> 
			<upper threshold>"


==> seesh.c <==
/* SEESH.C - Convert a 16-bit SHIM image to an 8-bit image.
		Scale to window given at input command line.
   Author: Mike Wall
   Date: 3/26/95
   Version: 1.0
   Description:

		"seesh <input file> <output file> <lower threshold> 
			<upper threshold>"


==> shimlt.c <==
/* SHIMLT.C - Generate an image of the angular distribution of */
/* intensity in a specified spherical shell of a lattice.
   
   Author: Mike Wall
   Date: 3/23/95
   Version: 1.
   
   Usage:
   		"shimlt <input lattice> <output shim> <inner
		radius> <outer radius>"

==> smthim.c <==
/* SMTHIM.C - Smooth an image.
   
   Author: Mike Wall   Modified by:Fredrik Osterberg
   Date: 4/11/93
   Version: 1.
   
   "smthim <image in> <image out> <hsize> <vsize>"

   Input is ascii coordinates file.  Output is 16-bit 
   image of specified size (1024 x 1024 default).

==> solidlt.c <==
/* SOLIDLT.C - Apply solid angle correction to lattice.
   
   Author: Mike Wall
   Date: 3/25/95
   Version: 1.
   
   Usage:
   		"solidlt <input lattice> <output lattice>"
		
		Input is a lattice.  Output is a lattice.  

==> subim.c <==
/* SUBIM.C - Subtract one image from another.
   
   Author: Mike Wall
   Date: 4/18/94
   Version: 1.
   
   "subim <input image 1> <x origin 1> <y origin 1> <input image 2> <x origin 2> <y origin 2> <output image>" 

   Input two diffraction images in TIFF TV6 format.  Output is the second 
   subtracted from the first, taking origin translation into account.

==> sublt.c <==
/* SUBLT.C - Calculate the voxel-by-voxel difference of two lattices.
   
   Author: Mike Wall
   Date: 7/7/95
   Version: 1.
   
   Usage:
   		"sublt <input lattice 1> <input lattice 2> <output
		lattice>"


==> subrf.c <==
/* SUBRF.C - Subtract one rfile from another.
   
   Author: Mike Wall
   Date: 5/1/94
   Version: 1.
   
   "subrf <input rfile 1> <input rfile 2> <output rfile>"

   Input is two rfiles.  Output is second rfile subtracted from the
   first.

==> subrfim.c <==
/* SUBRFIM.C - Subtract I(r) from a diffraction image.
   
   Author: Mike Wall
   Date: 4/4/94
   Version: 1.
   
   "subrfim <input file> <image in> <image out> <x origin> <y origin>"

   Input is rfile and image.  Output is 16-bit 
   image with rfile subtracted.

==> subrflt.c <==
/* SUBRFLT.C - Subtract a radial intensity distribution from each pixel
		in a 3D lattice.
   
   Author: Mike Wall
   Date: 3/28/93
   Version: 1.
   
   Usage:
   		"subrflt <input rfile> <input lattice> <output lattice>"


==> sumim.c <==
/* SUMIM.C - Add one image to another.
   
   Author: Mike Wall
   Date: 4/6/95
   Version: 1.
   
   "sumim <input image 1> <x origin 1> <y origin 1> <input image 2> <x origin 2> <y origin 2> <output image>" 

   Input two diffraction images in TIFF TV6 format.  Output is the 
   sum, taking origin translation into account.

==> sumlt.c <==
/* SUMLT.C - Calculate the voxel-by-voxel sum of two lattices.
   
   Author: Mike Wall
   Date: 4/11/95
   Version: 1.
   
   Usage:
   		"sumlt <input lattice 1> <input lattice 2> <output
		lattice>"


==> sumrf.c <==
/* SUMRF.C - Sum two rfiles.
   
   Author: Mike Wall
   Date: 4/19/94
   Version: 1.
   
   "sumrf <input rfile 1> <input rfile 2> <output rfile>"

   Input is two rfiles.  Output is sum of rfiles, point-by-point.
   second.

==> swapmw.c <==
#include<stdio.h>
#include<stdlib.h>

void main()
{
	char ch1,
		ch2;

	while( fread(&ch1, 1, 1, stdin) == 1) {
	  fread(&ch2, 1, 1, stdin);

==> symlt.c <==
/* SYMLT.C - Symmetrize a lattice according to input line instructions.
   
   Author: Mike Wall
   Date: 2/28/95
   Version: 1.
   
   Usage:
   		"symlt <input lattice> <output lattice> <symmetry_operation>"

		Input are lattice and symmetry operation

==> tag_overloads.c <==
/* TAG_OVERLOADS.C - Change 32767 to -1 (65535) in an input 16-bit greyscale
		image with a 4096 byte header (tv6 TIFF file).

   Author: Mike Wall
   Date: 2/26/94
   Version: 1.0
   Description:

		"tag_overloads <input file> <output file>" 


==> tagim.c <==
/* TAGIM.C - Create an image with constant pixel value based on an input
		image format.
   
   Author: Mike Wall
   Date: 4/18/94
   Version: 1.
   
   "tagim <image in> <constant> <image out>" 

   Input is image and constant.  Output is input image with all pixel values 

==> taglt.c <==
/* TAGLT.C - Convert all voxels of specified value in a lattice to an 
             ignore_tag.
   
   Author: Mike Wall
   Date: 5/5/95
   Version: 1.
   
   Usage:
   		"taglt <input lattice> <output lattice> <target value>"


==> tagneg.c <==
/* TAGIM.C - Create an image with constant pixel value based on an input
		image format.
   
   Author: Mike Wall
   Date: 4/18/94
   Version: 1.
   
   "tagim <image in> <constant> <image out>" 

   Input is image and constant.  Output is input image with all pixel values 

==> tailc.c <==
/*
 * TAILC.C	- Output the tail of a specified file.  Use number of
		characters given on input line.

   Version: 1.0
   Date: 3/17/94

	Input line is:
			"tailc -<number of characters> <input file>"


==> thrshim.c <==
/* THRSHIM.C - Set all pixels above and below given thresholds equal to an 
		ignore_tag.
   
   Author: Mike Wall
   Date: 5/13/94
   Version: 1.
   
   "thrshim <image in> <lower> <upper> <image out>" 

   Input is image and upper and lower thresholds.  Output is input image 

==> tmp.c <==
/* INTDFIM.C - Integrate diffuse features in a diffraction image and output to
               a file.
   
   Author: Mike Wall  
   Date: 5/28/94
   Version: 1.0
   
   "intdfim <diffuse features in> <image in> <diffuse features out>"

   Input is ascii diffuse features file and input image.  Output is

==> totiff8.c <==
/* TOTIFF8.C - Convert a 16-bit 1024x1024 TV6 tiff image to an 8-bit tiff image.
   Author: Mike Wall
   Date: 8/17/93
   Version: 1.0
   Description:

		"totiff8 <input file> <output file>"

		Input is a 16-bit 1024x1024 TV6 tiff image.  
		Output is an 8-bit tiff image.

==> tst.c <==
void main()
{
	int i;

	for(i=0;i<100;i++) {
		printf("Line number %d.\n",i);
	}
}


==> tst3d.c <==
#include<stdio.h>
#include<math.h>
#include<stdlib.h>

#define DIM 101
#define LOWI -10.5
#define HIGHI 10.5
#define LOWJ -10.5
#define HIGHJ 10.5
#define LOWK -10.5

==> waveim.c <==
/* WAVEIM - Create an image with a fixed length scale fulctuation.
   
   Author: Mike Wall
   Date: 4/6/95
   Version: 1.
   
   "waveim <image in> <constant> <image out>" 

   Input is image, amplitude and pitch.  
   Output is wavy image of type input image.

==> windim.c <==
/* WINDIM.C - Mark all pixels outside a window in an image with an ignore tag.
   
   Author: Mike Wall  
   Date: 4/25/94
   Version: 1.
   
   "windim <image in> <x_lower_bound> <x_upper_bound> <y_lower_bound> 
		<y_upper_bound> <image out>

   Input is diffraction image.  Output is 16-bit 

==> writehdr.c <==
#include<stdio.h>
#include<stdlib.h>

void main()
{
	long
		lattice_size = 16;

	float
		lower_bound = 0,

==> xflt.c <==
/* XFLT.C - Transform a lattice according to input line instructions.
   
   Author: Mike Wall
   Date: 3/24/95
   Version: 1.
   
   Usage:
   		"xflt <input lattice> <output lattice> <operation>"

		Input are lattice and operation

==> xfmask.c <==
/* XFMASK.C - Tag pixels as ignored in one image which in a second image are
		tagged as either overloads or ignored.  Positions are 
		reffered to origin.
   
   Author: Mike Wall
   Date: 4/11/94
   Version: 1.
   
   "xfmask <input image 1> <input image 2> <output image>" 


==> xpl2mw.c <==
#include<stdio.h>
#include<math.h>
#include<stdlib.h>

#define DIM 20
#define LOWI -10.5
#define HIGHI 10.5
#define LOWJ -10.5
#define HIGHJ 10.5
#define LOWK -10.5
